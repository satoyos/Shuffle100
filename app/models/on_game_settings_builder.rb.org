class OnGameSettingsBuilder
  # 歌間隔の秒数を決める画面関連
  INTERVAL_SLIDER_LABEL_FORMAT = '%.02f秒'
  INTERVAL_SLIDER_INITIAL_VALUE = 1.00  # 未設定の場合の初期値
  INTERVAL_SLIDER_MIN = 0.70
  INTERVAL_SLIDER_MAX = 1.30

  class << self
    def create
      root = QRootElement.alloc.init
      root.title = 'いろいろな設定'
      root.grouped = true
      section = QSection.alloc.init
=begin
      section.title = '歌と歌との間隔'
      label = QLabelElement.alloc.initWithTitle('設定されている間隔', Value: '1.00秒')
      section.addElement(label)
=end
      section.addElement(self.createIntervalSettingRoot)
      root.addSection(section)

      root
    end



    def createIntervalSettingRoot
      root = QRootElementForInterval.alloc.init
      root.title = '歌と歌の間隔'
      root.controllerName = 'IntervalSettingController'
      root.grouped = true
      section = QSection.alloc.init

      root.addSection(section)
      root
    end

    def init_slider_value
      INTERVAL_SLIDER_INITIAL_VALUE
    end
  end

  def initialize_custom_part
    self.navigationItem.rightBarButtonItem = bar_button_done
  end

  def bar_button_done
    @done_button ||=
        UIBarButtonItem.alloc.initWithBarButtonSystemItem(UIBarButtonItemStyleDone,
                                                          target: self,
                                                          action: 'done_button_did_pushed:')
  end

  def done_button_did_pushed(sender)
    puts 'Done button pushed.' if BW::debug?
  end

end

class QRootElementForInterval < QRootElement

  #%ToDo: スライダーで設定した時間間隔をdetailTextとして表示できるようにしよう！

  def getCellForTableView(tableView, controller:controller)
    cell = super
    cell.textLabel.text = '歌と歌の間隔'
    cell.detailTextLabel.text = '1.00秒'
    cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator
    cell
  end

end

